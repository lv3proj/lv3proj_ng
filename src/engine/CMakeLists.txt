set(engine_SRC
Anim.h
AnimParser.cpp
AnimParser.h
AnimatedTexture.cpp
AnimatedTexture.h
Bootstrap.cpp
Bootstrap.h
CMakeLists.txt
Camera.cpp
Camera.h
Collision.h
Engine.cpp
Engine.h
Entity.cpp
Entity.h
FileAPI.cpp
FileAPI.h
GLTexture.cpp
GLTexture.h
MemResource.h
ObjectMgr.cpp
ObjectMgr.h
ObsGrid.cpp
ObsGrid.h
ObsRender.cpp
ObsRender.h
OpenGLAPI.cpp
OpenGLAPI.h
OpenGLStubs.h
Quad.cpp
Quad.h
RenderLayer.cpp
RenderLayer.h
RenderLayerMgr.cpp
RenderLayerMgr.h
RenderObject.cpp
RenderObject.h
Renderer.cpp
Renderer.h
Resource.cpp
Resource.h
ResourceMgr.cpp
ResourceMgr.h
SDLMusicResource.cpp
SDLMusicResource.h
SDLSoundResource.cpp
SDLSoundResource.h
SDLSurfaceResource.cpp
SDLSurfaceResource.h
SDL_func.cpp
SDL_func.h
ScriptObject.cpp
ScriptObject.h
SoundCore.cpp
SoundCore.h
Texture.cpp
Texture.h
Tile.cpp
Tile.h
TileGrid.cpp
TileGrid.h
collision/AABB.cpp
collision/AABB.h
collision/Circle.cpp
collision/Circle.h
collision/Collidable.h
collision/Collision.cpp
collision/Collision.h
collision/Line.cpp
collision/Line.h
GL/gl.h
GL/glext.h
)

include_directories (${SHARED_INCLUDE_DIR})
add_library(engine ${engine_SRC})
target_link_libraries(engine ${SDL_ALL_LIBS} gme ttvfs)
